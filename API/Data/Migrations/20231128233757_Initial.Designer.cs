// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231128233757_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Data.Models.News", b =>
                {
                    b.Property<Guid>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("published")
                        .HasColumnType("date");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NewsId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsId = new Guid("97921fe9-4fea-4756-880d-d4df10d514ec"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 1"
                        },
                        new
                        {
                            NewsId = new Guid("da015ff8-b47b-48c0-8353-fd3012c9a1b7"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 2"
                        },
                        new
                        {
                            NewsId = new Guid("1668183c-29a9-4168-b6b5-06556cc8258c"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 3"
                        });
                });

            modelBuilder.Entity("API.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("addedon")
                        .HasColumnType("date");

                    b.Property<int?>("barcode")
                        .HasColumnType("integer");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("descriptionbullets")
                        .HasColumnType("text");

                    b.Property<int?>("discount")
                        .HasColumnType("integer");

                    b.Property<string[]>("images")
                        .HasColumnType("text[]");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("price")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("sells")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("d618b793-65d0-4b28-a48d-0cb76701ae31"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 1",
                            price = 500,
                            quantity = 50,
                            sells = 500
                        },
                        new
                        {
                            ProductId = new Guid("e3a00c40-03d2-40b7-a566-b7f044481044"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 2",
                            price = 500,
                            quantity = 10,
                            sells = 50
                        },
                        new
                        {
                            ProductId = new Guid("d395b056-9080-4b9f-9405-f9d531ade622"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 3",
                            price = 500,
                            quantity = 1,
                            sells = 15
                        },
                        new
                        {
                            ProductId = new Guid("0fe9cb6f-f2f5-4843-ae9a-e54d6b8ebdaa"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 4",
                            price = 500,
                            quantity = 5,
                            sells = 40
                        },
                        new
                        {
                            ProductId = new Guid("9bd81fdd-7322-4312-a208-4f34c8baaa16"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 5",
                            price = 500,
                            quantity = 4,
                            sells = 1
                        },
                        new
                        {
                            ProductId = new Guid("6f80aeee-13db-4074-aada-d6ba2852b6f8"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 6",
                            price = 500,
                            quantity = 6,
                            sells = 25
                        },
                        new
                        {
                            ProductId = new Guid("e0343d1d-f336-4f29-968e-53d1448c4be3"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 7",
                            price = 500,
                            quantity = 7,
                            sells = 0
                        },
                        new
                        {
                            ProductId = new Guid("0a264458-6c83-4012-9be7-8e7c7eda0ab8"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 8",
                            price = 500,
                            quantity = 0,
                            sells = 0
                        });
                });

            modelBuilder.Entity("API.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("hashedpassword")
                        .HasColumnType("text");

                    b.Property<string>("pass_salt")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("c2b867fb-e6be-4d78-a246-6631118f5a61"),
                            username = "admintest",
                            usertype = "admin"
                        },
                        new
                        {
                            UserId = new Guid("19787d61-2a8f-41c7-83a0-02ac0f046731"),
                            username = "usertest",
                            usertype = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231128234026_addedpurchaselogsincontext")]
    partial class addedpurchaselogsincontext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Data.Models.News", b =>
                {
                    b.Property<Guid>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("published")
                        .HasColumnType("date");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NewsId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsId = new Guid("77bdbdec-39fd-4d9b-9394-35089935216c"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 1"
                        },
                        new
                        {
                            NewsId = new Guid("6f3a894f-971e-4263-9b21-fb365aece3cb"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 2"
                        },
                        new
                        {
                            NewsId = new Guid("aaff248d-7772-4afb-acde-e868266d87af"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 3"
                        });
                });

            modelBuilder.Entity("API.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("addedon")
                        .HasColumnType("date");

                    b.Property<int?>("barcode")
                        .HasColumnType("integer");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("descriptionbullets")
                        .HasColumnType("text");

                    b.Property<int?>("discount")
                        .HasColumnType("integer");

                    b.Property<string[]>("images")
                        .HasColumnType("text[]");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("price")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("sells")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("bffcdd60-9026-44a9-a328-5ee73bfb47e8"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 1",
                            price = 500,
                            quantity = 50,
                            sells = 500
                        },
                        new
                        {
                            ProductId = new Guid("7e345721-a6db-4a0f-902f-1f030e44838b"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 2",
                            price = 500,
                            quantity = 10,
                            sells = 50
                        },
                        new
                        {
                            ProductId = new Guid("b1f12960-4467-49fe-9022-1e03722467e7"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 3",
                            price = 500,
                            quantity = 1,
                            sells = 15
                        },
                        new
                        {
                            ProductId = new Guid("63be51b6-cc02-4222-98cf-2ea124afe339"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 4",
                            price = 500,
                            quantity = 5,
                            sells = 40
                        },
                        new
                        {
                            ProductId = new Guid("4a2be4d1-3005-43ba-b6f2-aec5a303e47e"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 5",
                            price = 500,
                            quantity = 4,
                            sells = 1
                        },
                        new
                        {
                            ProductId = new Guid("b73f5721-f458-4d01-bbe1-05916ba24d90"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 6",
                            price = 500,
                            quantity = 6,
                            sells = 25
                        },
                        new
                        {
                            ProductId = new Guid("e23ebf47-8fcc-48ca-970c-a34e2520e0ae"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 7",
                            price = 500,
                            quantity = 7,
                            sells = 0
                        },
                        new
                        {
                            ProductId = new Guid("bab17840-df31-4be6-8812-b18ef17a217d"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 8",
                            price = 500,
                            quantity = 0,
                            sells = 0
                        });
                });

            modelBuilder.Entity("API.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("hashedpassword")
                        .HasColumnType("text");

                    b.Property<string>("pass_salt")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("2f910c5d-c9d5-4391-a315-e6df614eb2a6"),
                            username = "admintest",
                            usertype = "admin"
                        },
                        new
                        {
                            UserId = new Guid("a651951d-2ecf-4f00-a832-dcef9b859fc5"),
                            username = "usertest",
                            usertype = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

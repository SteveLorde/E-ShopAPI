// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Data.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NewsId"));

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("published")
                        .HasColumnType("date");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NewsId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsId = 1,
                            description = "Desc Test",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 1"
                        },
                        new
                        {
                            NewsId = 2,
                            description = "Desc Test",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 2"
                        },
                        new
                        {
                            NewsId = 3,
                            description = "Desc Test",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 3"
                        });
                });

            modelBuilder.Entity("API.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("addedon")
                        .HasColumnType("date");

                    b.Property<int?>("barcode")
                        .HasColumnType("integer");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("descriptionbullets")
                        .HasColumnType("text");

                    b.Property<int?>("discount")
                        .HasColumnType("integer");

                    b.Property<string[]>("images")
                        .HasColumnType("text[]");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("price")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("2d8cbb3b-03d2-4b95-996e-995675c1d7a8"),
                            description = "Desc Test",
                            name = "Product 1",
                            price = 500
                        },
                        new
                        {
                            ProductId = new Guid("b5360f9d-9ae6-456e-9daf-0f89f6c15431"),
                            description = "Desc Test",
                            name = "Product 2",
                            price = 500
                        },
                        new
                        {
                            ProductId = new Guid("d69a5d7d-912d-44d7-8db8-1894b5f9e538"),
                            description = "Desc Test",
                            name = "Product 3",
                            price = 500
                        },
                        new
                        {
                            ProductId = new Guid("2fd68b95-3b2d-4fad-9e74-ac1c3764232c"),
                            description = "Desc Test",
                            name = "Product 4",
                            price = 500
                        },
                        new
                        {
                            ProductId = new Guid("901f4c46-46b8-486c-a918-b26859e95563"),
                            description = "Desc Test",
                            name = "Product 5",
                            price = 500
                        },
                        new
                        {
                            ProductId = new Guid("f475dfcd-37b9-4065-a6ab-b86754e05b3f"),
                            description = "Desc Test",
                            name = "Product 6",
                            price = 500
                        },
                        new
                        {
                            ProductId = new Guid("77cbdad5-1012-4be6-85d8-2a3eec72372a"),
                            description = "Desc Test",
                            name = "Product 7",
                            price = 500
                        },
                        new
                        {
                            ProductId = new Guid("624c0805-fff1-484c-977c-2adb16d8da02"),
                            description = "Desc Test",
                            name = "Product 8",
                            price = 500
                        });
                });

            modelBuilder.Entity("API.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("hashedpassword")
                        .HasColumnType("text");

                    b.Property<string>("pass_salt")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("3907e15e-0a1d-4cae-9dbc-8107cc0f179d"),
                            username = "admintest",
                            usertype = "admin"
                        },
                        new
                        {
                            UserId = new Guid("6a400439-2c80-42bc-adc7-2f0e491f34a1"),
                            username = "usertest",
                            usertype = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

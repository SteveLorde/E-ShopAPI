// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Data.Models.News", b =>
                {
                    b.Property<Guid>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("published")
                        .HasColumnType("date");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NewsId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsId = new Guid("2807756c-dfc8-4d5d-8964-db8f7a218aba"),
                            description = "Desc Test",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 1"
                        },
                        new
                        {
                            NewsId = new Guid("5ff78de2-32c8-4d10-b9e6-61d3965d78de"),
                            description = "Desc Test",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 2"
                        },
                        new
                        {
                            NewsId = new Guid("207fac73-e220-45e3-bb0c-deef5a3f50de"),
                            description = "Desc Test",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 3"
                        });
                });

            modelBuilder.Entity("API.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("addedon")
                        .HasColumnType("date");

                    b.Property<int?>("barcode")
                        .HasColumnType("integer");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("descriptionbullets")
                        .HasColumnType("text");

                    b.Property<int?>("discount")
                        .HasColumnType("integer");

                    b.Property<string[]>("images")
                        .HasColumnType("text[]");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("price")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("sells")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("66cd93d1-1cf2-4c1a-b4fb-a2f9d94e3d70"),
                            description = "Desc Test",
                            name = "Product 1",
                            price = 500,
                            quantity = 50,
                            sells = 500
                        },
                        new
                        {
                            ProductId = new Guid("20d29cd7-a918-4141-8fc1-c18e6436d2a8"),
                            description = "Desc Test",
                            name = "Product 2",
                            price = 500,
                            quantity = 10,
                            sells = 50
                        },
                        new
                        {
                            ProductId = new Guid("848fb490-1617-4fb0-b243-07d8da2812b1"),
                            description = "Desc Test",
                            name = "Product 3",
                            price = 500,
                            quantity = 1,
                            sells = 15
                        },
                        new
                        {
                            ProductId = new Guid("e738d355-26b7-434d-948a-17827808fc11"),
                            description = "Desc Test",
                            name = "Product 4",
                            price = 500,
                            quantity = 5,
                            sells = 40
                        },
                        new
                        {
                            ProductId = new Guid("5bef0c5c-207b-4b6d-8e57-9de6483172c5"),
                            description = "Desc Test",
                            name = "Product 5",
                            price = 500,
                            quantity = 4,
                            sells = 1
                        },
                        new
                        {
                            ProductId = new Guid("4f4776bf-5329-461e-8651-fc0da49b915e"),
                            description = "Desc Test",
                            name = "Product 6",
                            price = 500,
                            quantity = 6,
                            sells = 25
                        },
                        new
                        {
                            ProductId = new Guid("18a15403-e61f-4622-843b-3c754a1116cd"),
                            description = "Desc Test",
                            name = "Product 7",
                            price = 500,
                            quantity = 7,
                            sells = 0
                        },
                        new
                        {
                            ProductId = new Guid("6a0d1268-e719-40c2-a2ee-bd3227ac2777"),
                            description = "Desc Test",
                            name = "Product 8",
                            price = 500,
                            quantity = 0,
                            sells = 0
                        });
                });

            modelBuilder.Entity("API.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("hashedpassword")
                        .HasColumnType("text");

                    b.Property<string>("pass_salt")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("a8e1bf9a-277c-47f8-add4-66849519c8f1"),
                            username = "admintest",
                            usertype = "admin"
                        },
                        new
                        {
                            UserId = new Guid("a45910a9-c485-4288-81c7-ecbdbf898657"),
                            username = "usertest",
                            usertype = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

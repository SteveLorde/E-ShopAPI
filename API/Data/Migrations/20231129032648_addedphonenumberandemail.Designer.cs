// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231129032648_addedphonenumberandemail")]
    partial class addedphonenumberandemail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Data.Models.News", b =>
                {
                    b.Property<Guid>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("published")
                        .HasColumnType("date");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NewsId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsId = new Guid("bf0c7723-462d-4d60-97e8-7530c5c3ea33"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 1"
                        },
                        new
                        {
                            NewsId = new Guid("462235eb-997d-4731-856b-b7ca3865a337"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 2"
                        },
                        new
                        {
                            NewsId = new Guid("0d8b8ff5-db08-4ee0-ae55-dd0267116b5d"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 3"
                        });
                });

            modelBuilder.Entity("API.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("addedon")
                        .HasColumnType("date");

                    b.Property<int?>("barcode")
                        .HasColumnType("integer");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("descriptionbullets")
                        .HasColumnType("text");

                    b.Property<int?>("discount")
                        .HasColumnType("integer");

                    b.Property<string[]>("images")
                        .HasColumnType("text[]");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("price")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("sells")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("f4411dd9-d96a-4104-9d33-30f7beb3ad05"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 1",
                            price = 500,
                            quantity = 50,
                            sells = 500
                        },
                        new
                        {
                            ProductId = new Guid("4679e631-8273-49cd-91a6-fae714ea9d73"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 2",
                            price = 500,
                            quantity = 10,
                            sells = 50
                        },
                        new
                        {
                            ProductId = new Guid("4fe905ac-63ae-4e9c-a10f-b6379b594c18"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 3",
                            price = 500,
                            quantity = 1,
                            sells = 15
                        },
                        new
                        {
                            ProductId = new Guid("f741ceca-8eed-40a6-8706-3181886a2e23"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 4",
                            price = 500,
                            quantity = 5,
                            sells = 40
                        },
                        new
                        {
                            ProductId = new Guid("45ee830f-a1f3-44ad-8112-982ef324dab4"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 5",
                            price = 500,
                            quantity = 4,
                            sells = 1
                        },
                        new
                        {
                            ProductId = new Guid("710df7a2-9cf9-4b80-89d5-20be76a621af"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 6",
                            price = 500,
                            quantity = 6,
                            sells = 25
                        },
                        new
                        {
                            ProductId = new Guid("b199f9b1-cf03-4990-876e-492df1cf69d1"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 7",
                            price = 500,
                            quantity = 7,
                            sells = 0
                        },
                        new
                        {
                            ProductId = new Guid("4eaf8297-449c-4aea-a656-a92b8730a201"),
                            description = "Desc Test",
                            images = new[] { "1.jpg", "2.jpg", "3.jpg" },
                            name = "Product 8",
                            price = 500,
                            quantity = 0,
                            sells = 0
                        });
                });

            modelBuilder.Entity("API.Data.Models.PurchaseLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("accepted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("datetime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("PurchaseLogs");
                });

            modelBuilder.Entity("API.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("hashedpassword")
                        .HasColumnType("text");

                    b.Property<string>("pass_salt")
                        .HasColumnType("text");

                    b.Property<int?>("phonenumber")
                        .HasColumnType("integer");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("82ad01d9-78dd-4f85-a82e-b261529cb4f4"),
                            username = "admintest",
                            usertype = "admin"
                        },
                        new
                        {
                            UserId = new Guid("0a98ba08-74cd-4216-94aa-8f9993e7bb93"),
                            username = "usertest",
                            usertype = "user"
                        });
                });

            modelBuilder.Entity("API.Data.Models.PurchaseLog", b =>
                {
                    b.HasOne("API.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
